/*
 *
 *  Iter Vehemens ad Necem (IVAN)
 *  Copyright (C) Timo Kiviluoto
 *  Released under the GNU General
 *  Public License
 *
 *  See LICENSING which should be included
 *  along with this file for more details
 *
 */

#ifndef __CONFDEF_H__
#define __CONFDEF_H__

/*
 * Configuration defines of IVAN
 */

enum materialtypeid
{
  SOLID_ID = 1 << 12,
  ORGANIC_ID = 2 << 12,
  GAS_ID = 3 << 12,
  LIQUID_ID = 4 << 12,
  FLESH_ID = 5 << 12,
  POWDER_ID = 6 << 12,
  IRON_ALLOY_ID = 7 << 12
};

enum materialid
{
  NO_MATERIAL = 0,

  VALPURIUM = SOLID_ID + 1,
  GRAVEL = SOLID_ID + 2,
  MORAINE = SOLID_ID + 3,
  OCTIRON = SOLID_ID + 4,
  GLASS = SOLID_ID + 5,
  PARCHMENT = SOLID_ID + 6,
  CLOTH = SOLID_ID + 7,
  MITHRIL = SOLID_ID + 8,
  MARBLE = SOLID_ID + 9,
  GOLD = SOLID_ID + 10,
  GRASS = SOLID_ID + 11,
  LEATHER = SOLID_ID + 12,
  LEAF = SOLID_ID + 13,
  FABRIC = SOLID_ID + 14,
  PALM_LEAF = SOLID_ID + 15,
  SULFUR = SOLID_ID + 16,
  UNICORN_HORN = SOLID_ID + 17,
  DIAMOND = SOLID_ID + 18,
  SILVER = SOLID_ID + 19,
  SAPPHIRE = SOLID_ID + 20,
  RUBY = SOLID_ID + 21,
  BRONZE = SOLID_ID + 22,
  COPPER = SOLID_ID + 23,
  TIN = SOLID_ID + 24,
  SPIDER_SILK = SOLID_ID + 25,
  KEVLAR = SOLID_ID + 26,
  OMMEL_HAIR = SOLID_ID + 27,
  HARDENED_LEATHER = SOLID_ID + 28,
  TROLL_HIDE = SOLID_ID + 29,
  NYMPH_HAIR = SOLID_ID + 30,
  ANGEL_HAIR = SOLID_ID + 31,
  PHOENIX_FEATHER = SOLID_ID + 32,
  GOLDEN_EAGLE_FEATHER = SOLID_ID + 33,
  ICE = SOLID_ID + 34,
  DRAGON_HIDE = SOLID_ID + 35,
  ARCANITE = SOLID_ID + 36,
  ILLITHIUM = SOLID_ID + 37,
  BALSA_WOOD = SOLID_ID + 38,
  PINE_WOOD = SOLID_ID + 39,
  FIR_WOOD = SOLID_ID + 40,
  BIRCH_WOOD = SOLID_ID + 41,
  OAK_WOOD = SOLID_ID + 42,
  TEAK_WOOD = SOLID_ID + 43,
  EBONY_WOOD = SOLID_ID + 44,
  BLUE_CRYSTAL = SOLID_ID + 45,
  PURPLE_CRYSTAL = SOLID_ID + 46,
  GREEN_CRYSTAL = SOLID_ID + 47,
  SAND_STONE = SOLID_ID + 48,
  LIME_STONE = SOLID_ID + 49,
  CALCITE = SOLID_ID + 50,
  OBSIDIAN = SOLID_ID + 51,
  GNEISS = SOLID_ID + 52,
  SLATE = SOLID_ID + 53,
  GRANITE = SOLID_ID + 54,
  BASALT = SOLID_ID + 55,
  MILKY_QUARTZ = SOLID_ID + 56,
  FLINT = SOLID_ID + 57,
  QUARTZITE = SOLID_ID + 58,
  AMETHYST = SOLID_ID + 59,
  CITRINE = SOLID_ID + 60,
  ROSE_QUARTZ = SOLID_ID + 61,
  JASPER = SOLID_ID + 62,
  ROCK_CRYSTAL = SOLID_ID + 63,
  DARK_GRASS = SOLID_ID + 64,
  LEAD = SOLID_ID + 65,
  BLACK_GRANITE = SOLID_ID + 66,

  BANANA_FLESH = ORGANIC_ID + 1,
  SCHOOL_FOOD = ORGANIC_ID + 2,
  BANANA_PEEL = ORGANIC_ID + 3,
  KIWI_FLESH = ORGANIC_ID + 4,
  PINEAPPLE_FLESH = ORGANIC_ID + 5,
  PLANT_FIBER = ORGANIC_ID + 6,
  MUTANT_PLANT_FIBER = ORGANIC_ID + 7,
  BONE = ORGANIC_ID + 8,
  BREAD = ORGANIC_ID + 9,
  HOLY_BANANA_FLESH = ORGANIC_ID + 10,
  CARROT_FLESH = ORGANIC_ID + 11,
  OMMEL_CERUMEN = ORGANIC_ID + 12,
  OMMEL_BONE = ORGANIC_ID + 13,
  OMMEL_TOOTH = ORGANIC_ID + 14,

  AIR = GAS_ID + 1,
  MAGICAL_AIR = GAS_ID + 2,
  SMOKE = GAS_ID + 3,
  SKUNK_SMELL = GAS_ID + 4,
  GHOST = GAS_ID + 5,
  MAGIC_VAPOUR = GAS_ID + 6,
  EVIL_WONDER_STAFF_VAPOUR = GAS_ID + 7,
  GOOD_WONDER_STAFF_VAPOUR = GAS_ID + 8,
  FART = GAS_ID + 9,
  MUSTARD_GAS = GAS_ID + 10,

  OMMEL_URINE = LIQUID_ID + 1,
  PEPSI = LIQUID_ID + 2,
  WATER = LIQUID_ID + 3,
  HEALING_LIQUID = LIQUID_ID + 4,
  BLOOD = LIQUID_ID + 5,
  BROWN_SLIME = LIQUID_ID + 6,
  POISON_LIQUID = LIQUID_ID + 7,
  VALDEMAR = LIQUID_ID + 8,
  ANTIDOTE_LIQUID = LIQUID_ID + 9,
  VODKA = LIQUID_ID + 10,
  TROLL_BLOOD = LIQUID_ID + 11,
  DARK_FROG_BLOOD = LIQUID_ID + 12,
  SPIDER_BLOOD = LIQUID_ID + 13,
  VOMIT = LIQUID_ID + 14,
  ACIDOUS_BLOOD = LIQUID_ID + 15,
  SULPHURIC_ACID = LIQUID_ID + 16,
  DOG_DROOL = LIQUID_ID + 17,
  PEA_SOUP = LIQUID_ID + 18,
  OMMEL_SWEAT = LIQUID_ID + 19,
  OMMEL_TEARS = LIQUID_ID + 20,
  OMMEL_SNOT = LIQUID_ID + 21,
  SWEAT = LIQUID_ID + 22,
  GLOWING_BLOOD = LIQUID_ID + 23,
  YELLOW_SLIME = LIQUID_ID + 24,
  SICK_BLOOD = LIQUID_ID + 25,
  MUSTARD_GAS_LIQUID = LIQUID_ID + 26,

  GOBLINOID_FLESH = FLESH_ID + 1,
  PORK = FLESH_ID + 2,
  BEEF = FLESH_ID + 3,
  FROG_FLESH = FLESH_ID + 4,
  ELPURI_FLESH = FLESH_ID + 5,
  HUMAN_FLESH = FLESH_ID + 6,
  DOLPHIN_FLESH = FLESH_ID + 7,
  BEAR_FLESH = FLESH_ID + 8,
  WOLF_FLESH = FLESH_ID + 9,
  DOG_FLESH = FLESH_ID + 10,
  ENNER_BEAST_FLESH = FLESH_ID + 11,
  SPIDER_FLESH = FLESH_ID + 12,
  JACKAL_FLESH = FLESH_ID + 13,
  MUTANT_ASS_FLESH = FLESH_ID + 14,
  BAT_FLESH = FLESH_ID + 15,
  WERE_WOLF_FLESH = FLESH_ID + 16,
  KOBOLD_FLESH = FLESH_ID + 17,
  GIBBERLING_FLESH = FLESH_ID + 18,
  CAT_FLESH = FLESH_ID + 19,
  RAT_FLESH = FLESH_ID + 20,
  ANGEL_FLESH = FLESH_ID + 21,
  DWARF_FLESH = FLESH_ID + 22,
  DAEMON_FLESH = FLESH_ID + 23,
  MAMMOTH_FLESH = FLESH_ID + 24,
  BLACK_UNICORN_FLESH = FLESH_ID + 25,
  GRAY_UNICORN_FLESH = FLESH_ID + 26,
  WHITE_UNICORN_FLESH = FLESH_ID + 27,
  LION_FLESH = FLESH_ID + 28,
  BUFFALO_FLESH = FLESH_ID + 29,
  SNAKE_FLESH = FLESH_ID + 30,
  ORC_FLESH = FLESH_ID + 31,
  OSTRICH_FLESH = FLESH_ID + 32,
  CHAMELEON_FLESH = FLESH_ID + 33,
  FLOATING_EYE_FLESH = FLESH_ID + 34,
  MUSHROOM_FLESH = FLESH_ID + 35,
  MOOSE_FLESH = FLESH_ID + 36,
  MAGPIE_FLESH = FLESH_ID + 37,
  SKUNK_FLESH = FLESH_ID + 38,
  HEDGEHOG_FLESH = FLESH_ID + 39,
  MUTANT_BUNNY_FLESH = FLESH_ID + 40,
  HATTIFATTENER_FLESH = FLESH_ID + 41,
  BLINK_DOG_FLESH = FLESH_ID + 42,
  MAGIC_MUSHROOM_FLESH = FLESH_ID + 43,
  SICK_SPIDER_FLESH = FLESH_ID + 44,

  GUN_POWDER = POWDER_ID + 1,
  SNOW = POWDER_ID + 2,
  SAND = POWDER_ID + 3,

  IRON = IRON_ALLOY_ID + 1,
  STEEL = IRON_ALLOY_ID + 2,
  METEORIC_STEEL = IRON_ALLOY_ID + 3,
  ADAMANT = IRON_ALLOY_ID + 4
};

enum meleeweapontype
{
  LONG_SWORD = 1,
  TWO_HANDED_SWORD = 2,
  TWO_HANDED_SCIMITAR = 3,
  SPEAR = 4,
  AXE = 5,
  HALBERD = 6,
  MACE = 7,
  WAR_HAMMER = 8,
  SICKLE = 9,
  DAGGER = 10,
  SHORT_SWORD = 11,
  BASTARD_SWORD = 12,
  BATTLE_AXE = 13,
  SCYTHE = 14,
  QUARTER_STAFF = 15,
  HAMMER = 16
};

enum gorovitsweapontype
{
  GOROVITS_HAMMER = 1,
  GOROVITS_SICKLE = 2,
  GOROVITS_SCIMITAR = 3
};

enum bodyarmortype
{
  CHAIN_MAIL = 1,
  PLATE_MAIL = 2,
  ARMOR_OF_GREAT_HEALTH = 3
};

enum copyofleftnutofpetrustype
{
  CHEAP = 1,
  EXPENSIVE = 2
};

enum wandtype
{
  WAND_OF_POLYMORPH = 1,
  WAND_OF_STRIKING = 2,
  WAND_OF_FIRE_BALLS = 3,
  WAND_OF_TELEPORTATION = 4,
  WAND_OF_HASTE = 5,
  WAND_OF_SLOW = 6,
  WAND_OF_RESURRECTION = 7,
  WAND_OF_DOOR_CREATION = 8,
  WAND_OF_INVISIBILITY = 9,
  WAND_OF_CLONING = 10,
  WAND_OF_LIGHTNING = 11,
  WAND_OF_ACID_RAIN = 12,
  WAND_OF_MIRRORING = 13,
  WAND_OF_NECROMANCY = 14
};

enum whiptype
{
  RUNED_WHIP = 1
};

enum minetype
{
  BIG_MINE = 1
};

enum cloaktype
{
  CLOAK_OF_INVISIBILITY = 1,
  CLOAK_OF_FIRE_RESISTANCE = 2,
  CLOAK_OF_ELECTRICITY_RESISTANCE = 3,
  CLOAK_OF_ACID_RESISTANCE = 4
};

enum boottype
{
  BOOT_OF_STRENGTH = 1,
  BOOT_OF_AGILITY = 2,
  BOOT_OF_KICKING = 3
};

enum gauntlettype
{
  GAUNTLET_OF_STRENGTH = 1,
  GAUNTLET_OF_DEXTERITY = 2
};

enum ringtype
{
  RING_OF_FIRE_RESISTANCE = 1,
  RING_OF_POLYMORPH_CONTROL = 2,
  RING_OF_INFRA_VISION = 3,
  RING_OF_TELEPORTATION = 4,
  RING_OF_TELEPORT_CONTROL = 5,
  RING_OF_POLYMORPH = 6,
  RING_OF_POISON_RESISTANCE = 7,
  RING_OF_INVISIBILITY = 8,
  RING_OF_ELECTRICITY_RESISTANCE = 9,
  RING_OF_SEARCHING = 10,
  RING_OF_ACID_RESISTANCE = 11
};

enum amulettype
{
  AMULET_OF_LIFE_SAVING = 1,
  AMULET_OF_ESP = 2,
  AMULET_OF_WARDING = 3
};

enum helmettype
{
  FULL_HELMET = 1,
  HELM_OF_PERCEPTION = 2,
  HELM_OF_UNDERSTANDING = 3,
  HELM_OF_BRILLIANCE = 4,
  HELM_OF_ATTRACTIVITY = 5,
  GOROVITS_FAMILY_GAS_MASK = 6
};

enum belttype
{
  BELT_OF_CARRYING = 1,
  BELT_OF_LEVITATION = 2
};

enum itemcontainertype
{
  SMALL_CHEST = 1,
  CHEST = 2,
  LARGE_CHEST = 3,
  STRONG_BOX = 4
};

enum horntype
{
  BRAVERY = 1,
  FEAR = 2
};

enum guardtype
{
  ROOKIE = 1,
  VETERAN = 2,
  EUNUCH = 3,
  PATROL = 4,
  SHOP = 5,
  ELITE = 6,
  MASTER = 7,
  GRAND_MASTER = 8
};

enum frogtype
{
  DARK = 1,
  GREATER_DARK = 2,
  GIANT_DARK = 3,
  LIGHT = 4,
  GREATER_LIGHT = 5,
  GIANT_LIGHT = 6
};

enum mysticfrogtype
{
  DARK_MYSTIC = 1,
  LIGHT_MYSTIC = 2
};

enum skeletontype
{
  WARRIOR = 1,
  WAR_LORD = 2
};

enum goblintype
{
  BERSERKER = 1,
  BUTCHER = 2,
  PRINCE = 3,
  KING = 4
};

enum mommotype
{
  CONICAL = 1,
  FLAT = 2
};

enum spidertype
{
  LARGE = 1,
  GIANT = 2
};

enum beartype
{
  BLACK_BEAR = 1,
  GRIZZLY_BEAR = 2,
  CAVE_BEAR = 3,
  POLAR_BEAR = 4
};

enum zombietype
{
  ZOMBIE_OF_KHAZ_ZADM = 1
};

enum mistresstype
{
  TORTURING_CHIEF = 1,
  WHIP_CHAMPION = 2,
  WAR_LADY = 3,
  QUEEN = 4
};

enum koboldtype
{
  CHIEFTAIN = 1,
  LORD = 2,
  PATRIARCH = 3
};

enum carnivorousplanttype
{
  GREATER = 1,
  GIGANTIC = 2
};

enum orctype
{
  SLAUGHTERER = 1,
  SQUAD_LEADER = 2,
  OFFICER = 3,
  GENERAL = 4,
  MARSHAL = 5
};

enum darkmagetype
{
  APPRENTICE = 1,
  BATTLE_MAGE = 2,
  ELDER = 3,
  ARCH_MAGE = 4
};

enum bunnytype
{
  /* Least significant bit defines sex */

  BABY_MALE = 2,
  BABY_FEMALE = 3,
  ADULT_MALE = 4,
  ADULT_FEMALE = 5
};

enum necromancertype
{
  APPRENTICE_NECROMANCER = 1,
  MASTER_NECROMANCER = 2
};

enum touristtype
{
  HUSBAND = 1,
  WIFE = 2,
  CHILD = 3
};

enum sirentype
{
  LIGHT_ASIAN_SIREN = 1,
  DARK_ASIAN_SIREN = 2,
  CAUCASIAN_SIREN = 3,
  DARK_SIREN = 4,
  GREEN_SIREN = 5
};

enum mindwormtype
{
  HATCHLING = 1,
  BOIL = 1
};

enum solidterraintype
{
  PARQUET = 1,
  FLOOR = 2,
  GROUND = 3,
  GRASS_TERRAIN = 4,
  LANDING_SITE = 5,
  SNOW_TERRAIN = 6,
  DARK_GRASS_TERRAIN = 7,
  SAND_TERRAIN = 8
};

enum liquidterraintype
{
  POOL = 1,
  UNDERGROUND_LAKE = 2
};

enum walltype
{
  BRICK_FINE = 1,
  BRICK_PROPAGANDA = 2,
  BRICK_OLD = 3,
  BRICK_PRIMITIVE = 4,
  BRICK_PRIMITIVE_PROPAGANDA = 5,
  STONE_WALL = 6,
  ICE_WALL = 7,
  BROKEN_WALL = 8
};

enum decorationtype
{
  PINE = 1,
  FIR = 2,
  HOLY_TREE = 3,
  CARPET = 4,
  COUCH = 5,
  DOUBLE_BED = 6,
  POOL_BORDER = 7,
  POOL_CORNER = 8,
  PALM = 9,
  SNOW_PINE = 10,
  SNOW_FIR = 11,
  ANVIL = 12,
  SHARD = 13,
  CACTUS = 14,
  OAK = 15,
  BIRCH = 16,
  TEAK = 17,
  DWARF_BIRCH = 18
};

enum bouldertype
{
  BOULDER_1 = 1,
  BOULDER_2 = 2,
  BOULDER_3 = 3,
  SNOW_BOULDER = 4
};

enum stairstype
{
  STAIRS_UP = 100,
  STAIRS_DOWN = 200,
  SUMO_ARENA_ENTRY = 700,
  SUMO_ARENA_EXIT = 800
};

enum portaltype
{
  OREE_LAIR_ENTRY = 300,
  OREE_LAIR_EXIT = 400,
  DARK_LEVEL_PORTAL = DARK_LEVEL
};

enum olterraincontainertype
{
  BOOK_CASE = 1,
  CHEST_OF_DRAWERS = 2,
  SHELF = 3
};

enum barwalltype
{
  BROKEN_BARWALL = 1
};

enum doortype
{
  BARDOOR = 1,
  SECRET_DOOR = 2
};

enum roomtype
{
  ROOM_NORMAL = 1,
  ROOM_SHOP = 2,
  ROOM_CATHEDRAL = 3,
  ROOM_LIBRARY = 4,
  ROOM_BANANA_DROP_AREA = 5,
  ROOM_SUMO_ARENA = 6
};

#endif
